// Pin Definitions
#define PIR_SENSOR_PIN 2
#define TILT_SENSOR_PIN 3
#define LED1_PIN 13 // associated with the PIR sensor
#define LED2_PIN 12 // associated with the tilt sensor

volatile int pirState = 0; // Use volatile for variables used in ISR
volatile int tiltState = 0; 

void setup() {
  // Initialize the PIR sensor and the tilt sensor as inputs:
  pinMode(PIR_SENSOR_PIN, INPUT);
  pinMode(TILT_SENSOR_PIN, INPUT);
  // Initialize the LEDs as outputs:
  pinMode(LED1_PIN, OUTPUT);
  pinMode(LED2_PIN, OUTPUT);
  // Begin the serial communication with the baud rate of 9600
  Serial.begin(9600);
  
  // Attach the interrupts
  attachInterrupt(digitalPinToInterrupt(PIR_SENSOR_PIN), motionDetected, CHANGE);
  attachInterrupt(digitalPinToInterrupt(TILT_SENSOR_PIN), tiltDetected, CHANGE);
}

// The loop is empty because everything is now happening in the interrupt service routines (ISRs)
void loop() {  
}

// Interrupt service routine (ISR) for the PIR sensor
void motionDetected() {
  pirState = digitalRead(PIR_SENSOR_PIN);
  if (pirState == HIGH) {  
    digitalWrite(LED1_PIN, HIGH); 
    Serial.println("Motion detected! LED 1 is ON");
  } else {
    digitalWrite(LED1_PIN, LOW); 
    Serial.println("No motion detected. LED 1 is OFF");
  }
}

// Interrupt service routine (ISR) for the tilt sensor
void tiltDetected() {
  tiltState = digitalRead(TILT_SENSOR_PIN);
  if (tiltState == HIGH) {
    digitalWrite(LED2_PIN, HIGH);
    Serial.println("Tilt detected! LED 2 is ON");
  } else {
    digitalWrite(LED2_PIN, LOW);
    Serial.println("No tilt detected. LED 2 is OFF");
  }
}
